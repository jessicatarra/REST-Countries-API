{"version":3,"sources":["country.js","wrapper.js","country-list.js","input.js","search.js","Region.js","action-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","alpha2Code","history","useHistory","onClick","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","countryFilteredByRegion","console","log","useEffect","fetch","then","response","json","list","type","payload","catch","map","key","InputStyled","label","Input","props","class","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","Region","dropdown","setdropdown","onRegionChange","selectEvent","regionSelected","id","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","nativeName","subregion","topLevelDomain","currencies","languages","borders","item","CountryPageStyled","CountryPage","match","DBcountry","find","params","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0b2fc73c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport slugify from 'slugify'\r\n\r\nconst CountryStyled = styled.div`\r\n  cursor: pointer;\r\n  text-align: left;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\r\n  &:hover .details{\r\n    border: 1px solid var(--black);\r\n    border-radius: 0 0 5px 5px;\r\n    border-top: none;\r\n\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 160px;\r\n    object-fit: cover;\r\n    vertical-align: bottom;\r\n    border-radius: 5px 5px 0 0;\r\n  }\r\n  .details {\r\n    padding: 1.5em;\r\n    border: 1px solid transparent;\r\n    border-top: none;\r\n    transition: .3s border;\r\n    background: var(--white);\r\n  }\r\n  h2 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n  }\r\n  p {\r\n    font-size: 0.9em;\r\n    margin-bottom: 0.5em;\r\n  }\r\n`;\r\n\r\nfunction Country({\r\n  flag,\r\n  name,\r\n  population,\r\n  region,\r\n  capital,\r\n  alpha2Code\r\n}) {\r\n  const history = useHistory()\r\n  function handleClick() {\r\n    history.push(`/country/${slugify(alpha2Code)}`)\r\n  }\r\n\r\n  return (\r\n    <CountryStyled onClick={handleClick}>\r\n      <img loading=\"lazy\" src={flag} alt=\"\" />\r\n      <div className=\"details\">\r\n        <h2>{name}</h2>\r\n        <p><strong>Population:</strong> {population}</p>\r\n        <p><strong>Region:</strong> {region}</p>\r\n        <p><strong>Capital:</strong> {capital}</p>\r\n      </div>\r\n    </CountryStyled>\r\n  )\r\n}\r\n\r\nexport default Country","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n    max-width: 1312px;\r\n    margin: auto;\r\n    padding: 0 1rem;\r\n`\r\n\r\nfunction Wrapper({children}) {\r\n    return (\r\n        <WrapperStyled >\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Country from \"./country\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Wrapper from './wrapper'\r\n\r\nconst CountryListStyled = styled.div`\r\n  display: grid;\r\n  grid-row-gap: 2.3em;\r\n  grid-auto-flow: columns;\r\n  grid-column-gap: 75px;\r\n  grid-template-columns: repeat(auto-fill, 270px);\r\n  background: var(--background);\r\n  justify-content: center;\r\n  padding: 3em 0;\r\n`;\r\nfunction CountryList() {\r\n\r\n  const dispatch = useDispatch()\r\n  const countryListByName = useSelector((state) => state.countryListByName);\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== \"\" && countryListByName.length === 0) {\r\n      return state.countryFilteredByRegion;\r\n    }\r\n    if (countryListByName.length > 0) {\r\n      return countryListByName;\r\n    }\r\n\r\n    return state.countryList;\r\n  });\r\n  console.log(\"el estado total de mi app es\", countryList);\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_LIST\",\r\n          payload: list,\r\n        });\r\n        console.log(list.length);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error\");\r\n      });\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n      <Wrapper>\r\n        <CountryListStyled>\r\n          {countryList.map(({ \r\n            name, \r\n            flag, \r\n            population, \r\n            capital, \r\n            region,\r\n            alpha2Code\r\n\r\n          }) => {\r\n            return (\r\n              <Country\r\n                flag={flag}\r\n                name={name}\r\n                key={name}\r\n                population={population}\r\n                region={region}\r\n                capital={capital}\r\n                alpha2Code={alpha2Code}\r\n              />\r\n            );\r\n          })}\r\n        </CountryListStyled>\r\n      </Wrapper>    \r\n  );\r\n}\r\nexport default CountryList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputStyled = styled.label`\r\n  display: inline-flex;\r\n  background: var(--white);\r\n  align-items: center;\r\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\r\n  padding: 0 2rem;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n  i {\r\n    margin-right: 1em;\r\n    color: #c4c4c4;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    border: none;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: 0.7em;\r\n    outline:0;\r\n    background: var(--white);\r\n    color: var(--black);\r\n    &::-webkit-input-placeholder {\r\n      color: #c4c4c4;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <i class=\"fas fa-search\"></i>\r\n      <input type=\"text\" {...props} />\r\n    </InputStyled>\r\n  );\r\n}\r\n\r\nexport default Input","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from './input';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst SearchStyled = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    .close {\r\n        position: absolute;\r\n        right: 1em;\r\n        top: 1em;\r\n        border-radius: 50%;\r\n        border: none;\r\n        box-shadow: 02px 9px 0 rgba(0, 0, 0, .05);\r\n    }\r\n`;\r\n\r\nfunction Search() {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const filterByName = (e) => {\r\n        setInputValue(e.target.value);\r\n        dispatch({\r\n          type: \"SET_COUNTRY_BY_NAME\",\r\n          payload: e.target.value,\r\n        });\r\n      };\r\n      const clearInput = () => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_BY_NAME\",\r\n          payload: \"\",\r\n        });\r\n        setInputValue(\"\");\r\n      };\r\n    return (\r\n        <SearchStyled>\r\n            {\r\n                inputValue && \r\n                <i className=\"fas fa-times close\" onClick={clearInput}></i>\r\n            }   \r\n            <Input placeholder=\"Search for a country...\" value={inputValue}onChange={filterByName}/>\r\n        </SearchStyled>\r\n    )\r\n};\r\n\r\nexport default Search;","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst RegionFilterStyled = styled.div`\r\n  * {\r\n      box-sizing: border-box;\r\n  }\r\n  .dropdown {\r\n  border-radius: 5px;\r\n  background-color: var(--white);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  padding: 20px;\r\n  position: relative;\r\n  background: var(--white);\r\n  }\r\n  .btn-toggle .fas {\r\n    display: none;\r\n  }\r\n  body.dark .btn-toggle .fas {\r\n  display: inline-block;\r\n  } \r\n  .dropdown .fa-chevron-down {\r\n  margin-left: 10px;\r\n  }\r\n  .dropdown ul {\r\n  border-radius: 5px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\r\n  display: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  list-style-type: none;\r\n  background: var(--white);\r\n  width: 100%;\r\n  z-index: 99;\r\n  }\r\n  .dropdown.open ul {\r\n  display: block;\r\n  }\r\n  .dropdown ul li {\r\n    margin: 10px 0;\r\n  }\r\n`\r\n\r\nconst filterByRegionAction = (regionSelected) => {\r\n  return {\r\n    type: 'FILTER_BY_REGION',\r\n    payload: { regionSelected },\r\n  };\r\n}\r\n\r\nexport const Region = () => {\r\n  const dispatch = useDispatch();\r\n  const [dropdown, setdropdown] = useState(false);\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  const onRegionChange = (selectEvent) => {\r\n    dispatch(filterByRegionAction(selectEvent));\r\n  }\r\n  return (\r\n\r\n    <RegionFilterStyled>\r\n      <div id=\"filter\" className={`${dropdown?'dropdown open':'dropdown'}`} onClick={() => setdropdown(!dropdown)}>\r\n          Filter by Region\r\n          <i className=\"fas fa-chevron-down\"></i>\r\n          <ul>\r\n            <li onClick={()=>onRegionChange('Africa')}>Africa</li>\r\n            <li onClick={()=>onRegionChange('Americas')}>Americas</li>\r\n            <li onClick={()=>onRegionChange('Asia')}>Asia</li>\r\n            <li onClick={()=>onRegionChange('Europe')}>Europe</li>\r\n            <li onClick={()=>onRegionChange('Oceania')}>Oceania</li>\r\n          </ul>\r\n      </div>\r\n    </RegionFilterStyled>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Search from './search';\r\nimport { Region as FilterByRegion } from './Region'\r\nimport Wrapper from './wrapper'\r\n\r\n\r\nconst ActionListStyled = styled.div`\r\n    .grid {\r\n        display: grid;\r\n        grid-template-columns: 1fr;    \r\n        grid-row-gap: 20px;\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n        .grid{\r\n          grid-template-columns: 480px 1fr 164px;  \r\n        }\r\n        \r\n    }\r\n`;\r\n\r\nfunction ActionList() {\r\n    return (\r\n        <ActionListStyled>\r\n            <Wrapper>\r\n                <div className=\"grid\">\r\n                    <Search/>\r\n                    <span></span>\r\n                    <FilterByRegion />                        \r\n                </div>\r\n            </Wrapper>\r\n        </ActionListStyled>\r\n    );\r\n};\r\n\r\nexport default ActionList;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeaderStyled = styled.div`\r\n    background: var(--white);\r\n    margin-bottom: 1em;\r\n    box-shadow: 0 2px 4px 0 rgba(0,0,0,.06);\r\n    .content {\r\n        height: 80px;\r\n        display: flex;\r\n        justify-content: space-between;     \r\n        align-items: center;   \r\n    }\r\n    h1{\r\n        font-size: 14px;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: var(--black);\r\n    }\r\n    .dark-mode {\r\n        cursor: pointer;\r\n        .moon {\r\n            display: inline-flex;\r\n            transform: rotate(-25deg);\r\n            margin-right: 10px;\r\n        }\r\n        p{\r\n            font-size: 12px;\r\n            font-weight: 600;\r\n        }\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n        margin-bottom: 3em;\r\n        h1{\r\n            font-size: 24px;\r\n        }\r\n        p {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Header({ setDarkMode, darkMode }) {\r\n    function handleClick() {\r\n        setDarkMode(!darkMode)\r\n    }\r\n    return (\r\n        <HeaderStyled>\r\n            <Wrapper>\r\n                <div className=\"content\">\r\n                    <Link to=\"/\">\r\n                        <h1>\r\n                            Where in the world?   \r\n                        </h1>                    \r\n                    </Link>\r\n\r\n                    <div className=\"dark-mode\">\r\n                        <p onClick={handleClick}>\r\n                            <span className=\"moon\">\r\n                                {\r\n                                    darkMode ? \r\n                                    <i className=\"fas fa-moon\"></i> :\r\n                                    <i className=\"far fa-moon\"></i>\r\n                                }                                \r\n                            </span>\r\n                            Dark Mode     \r\n                        </p>             \r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n    margin-top: 3em;\r\n    padding-bottom: 3em;\r\n    img {\r\n        width: 100%;\r\n        margin-bottom: 2em;\r\n    }\r\n    .grid{\r\n        display: grid;\r\n        grid-row-gap: 1em;\r\n    }\r\n    .border-item {\r\n        padding: .5em 2em;\r\n        border-radius: 5px;\r\n        margin-right: 15px;\r\n        box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n        display: inline-flex;\r\n        margin-bottom: 15px;\r\n        background: var(--white);\r\n    }\r\n    .languages {\r\n        span {\r\n            &:after {\r\n                content: ', ';\r\n            } \r\n            &:last-child {\r\n                &:after {\r\n                    display: none;\r\n                }\r\n            }           \r\n        }\r\n    }\r\n    @media screen and (min-width: 1024px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-column-gap: 120px;\r\n        margin-top: 5em;\r\n        .grid {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        .borders {\r\n            display: inline-flex;\r\n            margin-right: 1em;\r\n            margin-top: 3.5em;\r\n        }\r\n    }\r\n`\r\n\r\nfunction CountrySelected({ \r\n    flag, \r\n    name, \r\n    nativeName, \r\n    population, \r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies = [],\r\n    languages = [],\r\n    borders = [],\r\n    \r\n}) \r\n    \r\n    {\r\n    return (\r\n        <CountrySelectedStyled>\r\n            <img src={flag} alt=\"\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <div className=\"grid\">\r\n                    <div>\r\n                        <p><strong>Native Name:</strong> {nativeName}</p>\r\n                        <p><strong>Population:</strong> {population}</p>\r\n                        <p><strong>Region:</strong> {region}</p>\r\n                        <p><strong>Sub Region:</strong> {subregion}</p>\r\n                        <p><strong>Capital:</strong> {capital}</p>                    \r\n                    </div>\r\n                    <div>\r\n                        <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n                        <p><strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}</p>\r\n                        <p className=\"languages\"><strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}</p>                    \r\n                    </div>\r\n                </div>\r\n                <p className=\"borders\"><strong>Borders Countries:</strong> </p>\r\n                {borders.map((item) => <span class=\"border-item\">{item}</span>)}\r\n\r\n            </div>\r\n        </CountrySelectedStyled>\r\n    )\r\n}\r\n\r\nexport default CountrySelected","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Wrapper from './wrapper'\r\nimport { useSelector} from 'react-redux'\r\nimport CountrySelected from './country-selected'\r\n\r\nconst CountryPageStyled = styled.div`\r\n    .back{\r\n        background: var(--white);\r\n        color: var(--black);\r\n        box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n        padding: .7em 2.2em;\r\n        border-radius: 5px;\r\n        border: none;\r\n        cursor: pointer;\r\n        margin-top: 1em;\r\n        i{\r\n            margin-right:5px;\r\n        }\r\n        @media screen and (min-width: 1024px) {\r\n        .back {\r\n        margin-top: 3em;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction CountryPage({ match, history }) {\r\n    let DBcountry = useSelector(state => state.countryList.find(item => item.alpha2Code === match.params.id))\r\n\r\n    const [country, setCountry] = useState(DBcountry)\r\n    useEffect (()=> {\r\n\r\n        if (!country) {\r\n            fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\r\n            .then((response)=> response.json())\r\n            .then((data) => {\r\n                setCountry(data)\r\n            })\r\n        }\r\n        \r\n    }, [country, match.params.id]);\r\n\r\n    function handleClick() {\r\n        history.goBack()\r\n    }\r\n    return (\r\n        <CountryPageStyled>\r\n            <Wrapper>\r\n                <button className=\"back\" onClick={handleClick}><i class=\"fas fa-long-arrow-alt-left\"></i>Back</button>\r\n                <CountrySelected {...country}/>\r\n            </Wrapper>\r\n        </CountryPageStyled>\r\n    )\r\n}\r\n\r\nexport default CountryPage\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport CountryList from \"./country-list\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from './reducer'\r\nimport ActionList from './action-list'\r\nimport Header from './header'\r\nimport CountryPage from './country-page'\r\nimport { \r\n  BrowserRouter as Router, Route, Switch\r\n} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n  countryList: [],\r\n  countryListByName: [],\r\n  countryFilteredByRegion: [],\r\n  filterByRegion: '',\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\n  function App() {\r\n    const [darkMode, setDarkMode] = useState(false)\r\n    const [checked, setChecked] = useState(false)\r\n    const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\r\n\r\n    function changeMedia(mq) {\r\n      setDarkMode(mq.matches)\r\n      setChecked(mq.matches)\r\n    }\r\n\r\n    useEffect(() => {\r\n      const mq = window.matchMedia('(prefers-color-scheme: dark)')\r\n      mq.addListener(changeMedia)\r\n      setDarkMode(mq.matches)\r\n      setChecked(mq.matches)\r\n      return () => {\r\n        mq.removeListener(changeMedia)\r\n      }\r\n    }, [])\r\n  return (\r\n    <main className={mainClass}>\r\n      <Provider store={store}>    \r\n        <Router>\r\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\r\n          <Switch>\r\n            <Route path=\"/country/:id\" component={CountryPage} />\r\n            <Route path=\"/\">\r\n              <ActionList />\r\n              <CountryList />   \r\n            </Route>          \r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function reducer(state, action) {\r\n\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case \"SET_COUNTRY_LIST\": {\r\n        console.log(\"voy a actualizar\");\r\n        return { ...state, countryList: action.payload };\r\n      }\r\n  \r\n      case \"SET_COUNTRY_BY_NAME\": {\r\n        let list \r\n        if (state.filterByRegion !== \"\") {\r\n          list= state.countryFilteredByRegion\r\n        } else {\r\n          list = state.countryList\r\n        }\r\n        const countryListByName = list.filter((country) =>\r\n          country.name.toLowerCase().includes(action.payload.toLowerCase())\r\n        );\r\n        return { ...state, countryListByName };\r\n      }\r\n      case \"FILTER_BY_REGION\": {\r\n        const { regionSelected } = action.payload;\r\n  \r\n        if (\"\" === regionSelected) {\r\n          return { ...state, countryFilteredByRegion: [], filterByRegion: \"\" };\r\n        }\r\n  \r\n        const countryFilteredByRegion = state.countryList.filter(\r\n          (country) => country.region === regionSelected\r\n        );\r\n  \r\n        return {\r\n          ...state,\r\n          countryFilteredByRegion,\r\n          filterByRegion: regionSelected,\r\n        };\r\n      }\r\n  \r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}