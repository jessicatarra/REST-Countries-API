{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesta\\\\Documents\\\\GitHub\\\\REST-Countries-API\\\\src\\\\country-list.js\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Country from \"./country\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Wrapper from './wrapper';\nconst CountryListStyled = styled.div`\n  display: grid;\n  grid-row-gap: 2.3em;\n  grid-auto-flow: columns;\n  grid-column-gap: 65px;\n  grid-template-columns: repeat(auto-fill, 262px);\n  background: var(--background);\n  justify-content: center;\n  padding: 4em 0;\n`;\n\nfunction CountryList() {\n  const dispatch = useDispatch();\n  const countryListByName = useSelector(state => state.countryListByName);\n  const countryList = useSelector(state => {\n    if (state.filterByRegion !== \"\" && countryListByName.length === 0) {\n      return state.countryFilteredByRegion;\n    }\n\n    if (countryListByName.length > 0) {\n      return countryListByName;\n    }\n\n    return state.countryList;\n  });\n  console.log(\"el estado total de mi app es\", countryList);\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      return response.json();\n    }).then(list => {\n      dispatch({\n        type: \"SET_COUNTRY_LIST\",\n        payload: list\n      });\n      console.log(list.length);\n    }).catch(() => {\n      console.log(\"error\");\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CountryListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, countryList.map(({\n    name,\n    flag,\n    population,\n    capital,\n    region\n  }) => {\n    return /*#__PURE__*/React.createElement(Country, {\n      flag: flag,\n      name: name,\n      key: name,\n      population: population,\n      region: region,\n      capital: capital,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    });\n  })));\n}\n\nexport default CountryList;","map":{"version":3,"sources":["C:/Users/jesta/Documents/GitHub/REST-Countries-API/src/country-list.js"],"names":["React","useEffect","styled","Country","useSelector","useDispatch","Wrapper","CountryListStyled","div","CountryList","dispatch","countryListByName","state","countryList","filterByRegion","length","countryFilteredByRegion","console","log","fetch","then","response","json","list","type","payload","catch","map","name","flag","population","capital","region"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,iBAAiB,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;CAArC;;AAUA,SAASC,WAAT,GAAuB;AAErB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,iBAAiB,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,iBAAlB,CAArC;AACA,QAAME,WAAW,GAAGT,WAAW,CAAEQ,KAAD,IAAW;AACzC,QAAIA,KAAK,CAACE,cAAN,KAAyB,EAAzB,IAA+BH,iBAAiB,CAACI,MAAlB,KAA6B,CAAhE,EAAmE;AACjE,aAAOH,KAAK,CAACI,uBAAb;AACD;;AACD,QAAIL,iBAAiB,CAACI,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,aAAOJ,iBAAP;AACD;;AAED,WAAOC,KAAK,CAACC,WAAb;AACD,GAT8B,CAA/B;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CL,WAA5C;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdb,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAIAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACR,MAAjB;AACD,KAVH,EAWGW,KAXH,CAWS,MAAM;AACXT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAbH;AAcD,GAfQ,EAeN,CAACR,QAAD,CAfM,CAAT;AAkBA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,WAAW,CAACc,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,GAAD,KAAiD;AAChE,wBACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,GAAG,EAAEA,IAHP;AAIE,MAAA,UAAU,EAAEE,UAJd;AAKE,MAAA,MAAM,EAAEE,MALV;AAME,MAAA,OAAO,EAAED,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CADH,CADF,CADJ;AAkBD;;AACD,eAAetB,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Country from \"./country\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Wrapper from './wrapper'\r\n\r\nconst CountryListStyled = styled.div`\r\n  display: grid;\r\n  grid-row-gap: 2.3em;\r\n  grid-auto-flow: columns;\r\n  grid-column-gap: 65px;\r\n  grid-template-columns: repeat(auto-fill, 262px);\r\n  background: var(--background);\r\n  justify-content: center;\r\n  padding: 4em 0;\r\n`;\r\nfunction CountryList() {\r\n\r\n  const dispatch = useDispatch()\r\n  const countryListByName = useSelector((state) => state.countryListByName);\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== \"\" && countryListByName.length === 0) {\r\n      return state.countryFilteredByRegion;\r\n    }\r\n    if (countryListByName.length > 0) {\r\n      return countryListByName;\r\n    }\r\n\r\n    return state.countryList;\r\n  });\r\n  console.log(\"el estado total de mi app es\", countryList);\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: \"SET_COUNTRY_LIST\",\r\n          payload: list,\r\n        });\r\n        console.log(list.length);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"error\");\r\n      });\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n      <Wrapper>\r\n        <CountryListStyled>\r\n          {countryList.map(({ name, flag, population, capital, region }) => {\r\n            return (\r\n              <Country\r\n                flag={flag}\r\n                name={name}\r\n                key={name}\r\n                population={population}\r\n                region={region}\r\n                capital={capital}\r\n              />\r\n            );\r\n          })}\r\n        </CountryListStyled>\r\n      </Wrapper>    \r\n  );\r\n}\r\nexport default CountryList;\r\n"]},"metadata":{},"sourceType":"module"}