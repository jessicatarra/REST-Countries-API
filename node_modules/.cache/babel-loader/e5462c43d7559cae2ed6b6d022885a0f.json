{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesta\\\\Documents\\\\GitHub\\\\REST-Countries-API\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./country-list\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { Region } from \"./Region\";\nimport reducer from './reducer';\nimport ActionList from './action-list';\nimport Header from './header';\nimport CountryPage from './country-page';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  countryFilteredByRegion: [],\n  filterByRegion: \"\"\n};\nconst store = createStore(reducer, initialState);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)');\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n    return () => {\n      mq.removeListener(changeMedia);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: mainClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setDarkMode: setDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/country/:id\",\n    component: CountryPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CountryList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jesta/Documents/GitHub/REST-Countries-API/src/App.js"],"names":["React","useState","useEffect","CountryList","Provider","createStore","Region","reducer","ActionList","Header","CountryPage","BrowserRouter","Router","Route","Switch","initialState","countryList","countryListByName","countryFilteredByRegion","filterByRegion","store","App","darkMode","setDarkMode","checked","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SACEC,aAAa,IAAIC,MADnB,EAC2BC,KAD3B,EACkCC,MADlC,QAEO,kBAFP;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,iBAAiB,EAAE,EAFA;AAGnBC,EAAAA,uBAAuB,EAAE,EAHN;AAInBC,EAAAA,cAAc,EAAE;AAJG,CAArB;AAOA,MAAMC,KAAK,GAAGf,WAAW,CAACE,OAAD,EAAUQ,YAAV,CAAzB;;AACE,SAASM,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMyB,SAAS,GAAGJ,QAAQ,GAAG,cAAH,GAAoB,eAA9C;;AAEA,WAASK,WAAT,CAAqBC,EAArB,EAAyB;AACvBL,IAAAA,WAAW,CAACK,EAAE,CAACC,OAAJ,CAAX;AACAJ,IAAAA,UAAU,CAACG,EAAE,CAACC,OAAJ,CAAV;AACD;;AAED3B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,EAAE,GAAGE,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAX;AACAH,IAAAA,EAAE,CAACI,WAAH,CAAeL,WAAf;AACAJ,IAAAA,WAAW,CAACK,EAAE,CAACC,OAAJ,CAAX;AACAJ,IAAAA,UAAU,CAACG,EAAE,CAACC,OAAJ,CAAV;AACA,WAAO,MAAM;AACXD,MAAAA,EAAE,CAACK,cAAH,CAAkBN,WAAlB;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASF,sBACE;AAAM,IAAA,SAAS,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAGG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEb,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CAFF,CADF,CADF,CADF;AAgBD;;AAED,eAAeW,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport CountryList from \"./country-list\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport { Region } from \"./Region\";\r\nimport reducer from './reducer'\r\nimport ActionList from './action-list'\r\nimport Header from './header'\r\nimport CountryPage from './country-page'\r\nimport { \r\n  BrowserRouter as Router, Route, Switch\r\n} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n  countryList: [],\r\n  countryListByName: [],\r\n  countryFilteredByRegion: [],\r\n  filterByRegion: \"\",\r\n};\r\n\r\nconst store = createStore(reducer, initialState);\r\n  function App() {\r\n    const [darkMode, setDarkMode] = useState(false)\r\n    const [checked, setChecked] = useState(false)\r\n    const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\r\n\r\n    function changeMedia(mq) {\r\n      setDarkMode(mq.matches)\r\n      setChecked(mq.matches)\r\n    }\r\n\r\n    useEffect(() => {\r\n      const mq = window.matchMedia('(prefers-color-scheme: dark)')\r\n      mq.addListener(changeMedia)\r\n      setDarkMode(mq.matches)\r\n      setChecked(mq.matches)\r\n      return () => {\r\n        mq.removeListener(changeMedia)\r\n      }\r\n    }, [])\r\n  return (\r\n    <main className={mainClass}>\r\n      <Provider store={store}>    \r\n        <Router>\r\n          <Header setDarkMode ={setDarkMode} />\r\n          <Switch>\r\n            <Route path=\"/country/:id\" component={CountryPage} />\r\n            <Route path=\"/\">\r\n              <ActionList />\r\n              <CountryList />   \r\n            </Route>          \r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}